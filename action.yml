name: 'Matomo Tests'
description: 'Running Matomo Tests'
inputs:
  test-type:
    type: choice
    description: "test type"
    required: true
    options:
      - UI
      - PluginTests
      - JS
      - Angular
      - UnitTests
      - SystemTestsPlugins
      - SystemTestsCore
      - IntegrationTestsCore
      - IntegrationTestsPlugins
    default: PHP
  run-number:
    description: "GitHub run number"
    required: false
  artifact-pass:
    description: "UI upload pass"
    required: false
  plugin-name:
    description: "name"
    required: false
  mysql-driver:
    description: "Mysql driver"
    required: false
    options:
      - PDO_MYSQL
      - MYSQLI
    default: 'PDO_MYSQL'
  ui-test-options:
    description: "Additional options to run UI tests with"
    required: false
  phpunit-test-options:
    description: "Additional options to run PHPUnit with"
    required: false
  php-version:
    description: '7.2-8.1'
    required: true
    default: ''
  node-version:
    description: 'node version'
    required: false
    default: ''
  redis-service:
    type: boolean
    description: "require reds services"
    required: false
    default: false
  mysql-service:
    type: boolean
    description: "require mysql services"
    required: false
    default: true
  matomo-test-branch:
    description: "branch or tag of Matomo to run plugin tests for"
    required: false
    default: ''

runs:
  using: "composite"
  steps:

    - name: start mysql services
      if: inputs.mysql-service == 'true'
      shell: bash
      run: |
        docker run -d  --tmpfs /var/lib/mysql:rw --tmpfs /bitnami/mysql/data:rw --name mysql -p 3306:3306 -e ALLOW_EMPTY_PASSWORD=yes -e MYSQL_DATABASE=matomo_tests bitnami/mysql:5.7
        sleep 10
        mysql -h127.0.0.1 -uroot -e "SET GLOBAL sql_mode = 'NO_ENGINE_SUBSTITUTION,STRICT_TRANS_TABLES';SET GLOBAL wait_timeout = 36000;SET GLOBAL max_allowed_packet = 134209536;"

    - name: start redis serivces
      if: inputs.redis-service == 'true'
      shell: bash
      run: |
        docker run -d --name redis -e ALLOW_EMPTY_PASSWORD=yes -p 6379:6379 bitnami/redis:latest
        docker run -d --name redis-sentinel -p 26379:26379 bitnami/redis-sentinel:latest

    - name: Setup PHP
      if: inputs.php-version != ''
      uses: shivammathur/setup-php@v2
      with:
        php-version: ${{ inputs.php-version }}
        extensions: bcmath, ldap, curl, zip, pdo_mysql, mysqli, gd, redis, zlib, opcache
        ini-values: |
          post_max_size=256M
          memory_limit=512M,
          max_execution_time=10000,
          always_populate_raw_post_data=-1,
          error_reporting=E_ALL,
          log_errors=on,
          display_errors=on,
          allow_url_fopen=on,
          zend.exception_ignore_args=Off
          mysqli.allow_local_infile=On
          opcache.enable_cli=1
        tools: composer:v2
        coverage: none

    - name: Setup Node
      if: inputs.node-version != ''
      uses: actions/setup-node@v3
      with:
        node-version: ${{ inputs.node-version }}

    # setup apache etc
    - name: prepare setup
      shell: bash
      run: ${{ github.action_path }}/scripts/bash/prepare.sh
      env:
        PHP_VERSION: ${{ inputs.php-version }}
        MATOMO_TEST_TARGET: ${{ inputs.test-type }}
        MYSQL_ADAPTER: ${{ inputs.mysql-driver }}
        PLUGIN_NAME: ${{ inputs.plugin-name }}
        TEST_AGAINST_MATOMO_BRANCH: ${{ inputs.matomo-test-branch }}
        WORKSPACE: ${{ github.workspace }}
        ACTION_PATH: ${{ github.action_path }}

    - name: Run tests
      working-directory: ${{ github.workspace }}/matomo
      shell: bash
      run: ${{ github.action_path }}/scripts/bash/run_tests.sh
      env:
        TEST_SUITE: ${{ inputs.test-type }}
        PLUGIN_NAME: ${{ inputs.plugin-name }}
        UITEST_EXTRA_OPTIONS: ${{ inputs.ui-test-options }}
        PHPUNIT_EXTRA_OPTIONS: ${{ inputs.phpunit-test-options }}

    # system checks failed, upload expected xml and PDF
    - name: upload processed screenshots
      if: failure() && (inputs.test-type == 'UI' || inputs.test-type == 'All' || inputs.test-type == 'PluginTests')
      shell: bash
      run: ${{ github.action_path }}/scripts/bash/upload_artifacts.sh
      env:
        ARTIFACTS_PASS: ${{ inputs.artifact-pass }}
        GITHUB_REPO: ${{ github.repository }}
        GITHUB_BRANCH: ${{ github.head_ref || github.ref_name }}
        GITHUB_RUN_ID: ${{ github.run-id }}
        GITHUB_RUN_NUMBER: ${{ github.run-number }}
        WORKSPACE: ${{ github.workspace }}/matomo

    - name: View UI failures
      if: failure() && (inputs.test-type == 'UI' || inputs.test-type == 'All' || inputs.test-type == 'PluginTests')
      shell: bash
      run: ${{ github.action_path }}/scripts/bash/view_ui_failed.sh
      env:
        GITHUB_REPO: ${{ github.repository }}
        GITHUB_BRANCH: ${{ github.head_ref || github.ref_name }}
        GITHUB_RUN_ID: ${{ github.run-id }}
